"""description

Revision ID: a43bb279ba38
Revises: 382eff89be38
Create Date: 2024-11-11 19:50:14.639204

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a43bb279ba38'
down_revision = '382eff89be38'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('direction',
    sa.Column('direction_id', sa.UUID(), nullable=False),
    sa.Column('direction_name', sa.String(), nullable=True),
    sa.Column('direction_description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('direction_id')
    )
    op.create_table('trainer',
    sa.Column('trainer_id', sa.UUID(), nullable=False),
    sa.Column('trainer_name', sa.String(), nullable=True),
    sa.Column('trainer_description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('trainer_id')
    )
    op.drop_table('refresh_token')
    op.drop_table('auth')
    op.add_column('person', sa.Column('person_birth_date', sa.TIMESTAMP(), nullable=True))
    op.drop_column('person', 'picture')
    op.drop_column('person', 'person_age')
    op.add_column('training', sa.Column('trainer_id', sa.UUID(), nullable=False))
    op.add_column('training', sa.Column('direction_id', sa.UUID(), nullable=False))
    op.add_column('training', sa.Column('training_price', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'training', 'trainer', ['trainer_id'], ['trainer_id'], ondelete='cascade')
    op.create_foreign_key(None, 'training', 'direction', ['direction_id'], ['direction_id'], ondelete='cascade')
    op.drop_column('training', 'training_description')
    op.drop_column('training', 'training_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('training', sa.Column('training_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('training', sa.Column('training_description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'training', type_='foreignkey')
    op.drop_constraint(None, 'training', type_='foreignkey')
    op.drop_column('training', 'training_price')
    op.drop_column('training', 'direction_id')
    op.drop_column('training', 'trainer_id')
    op.add_column('person', sa.Column('person_age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('person', sa.Column('picture', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('person', 'person_birth_date')
    op.create_table('auth',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('salt', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['person.person_id'], name='auth_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='auth_pkey')
    )
    op.create_table('refresh_token',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_use', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['person.person_id'], name='refresh_token_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='refresh_token_pkey')
    )
    op.drop_table('trainer')
    op.drop_table('direction')
    # ### end Alembic commands ###
